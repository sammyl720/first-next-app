{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samle\\\\Desktop\\\\more_projects\\\\hello-next\\\\pages\\\\p\\\\[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../components/Layout';\nimport { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\n\nconst Post = ({\n  show\n}) => {\n  const router = useRouter();\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-3403474761\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, show.name), __jsx(\"p\", {\n    className: \"jsx-3403474761\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, show.summary.replace(/<[/]?[pb]>/g, '')), __jsx(\"img\", {\n    src: show.image.medium,\n    alt: show.name,\n    className: \"jsx-3403474761\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), __jsx(\"hr\", {\n    className: \"jsx-3403474761\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"jsx-3403474761\" + \" \" + 'markdown',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"jsx-3403474761\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, router.query.id), __jsx(Markdown, {\n    source: `\n## This is our Blog post.\nYes. we can have a [link](/).\nand we can have a tittle as well.\n\n### This is a title\n        `,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"3403474761\",\n    __self: this\n  }, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2FtbGVcXERlc2t0b3BcXG1vcmVfcHJvamVjdHNcXGhlbGxvLW5leHRcXHBhZ2VzXFxwXFxbaWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBCeUIsQUFHK0IsQUFHQyxBQUlULEFBR0gsU0FDQyxHQUhaLE9BSTJCLENBWDNCLHdCQVlBLE1BVGEsV0FDYiIsImZpbGUiOiJDOlxcVXNlcnNcXHNhbWxlXFxEZXNrdG9wXFxtb3JlX3Byb2plY3RzXFxoZWxsby1uZXh0XFxwYWdlc1xccFxcW2lkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnXHJcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9MYXlvdXQnXHJcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJ1xyXG5pbXBvcnQgTWFya2Rvd24gZnJvbSAncmVhY3QtbWFya2Rvd24nXHJcblxyXG5jb25zdCBQb3N0ID0gKHsgc2hvdyB9KSA9PiB7XHJcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKClcclxuICByZXR1cm4gKFxyXG4gICAgPExheW91dD5cclxuICAgICAgPGgxPntzaG93Lm5hbWV9PC9oMT5cclxuICAgICAgPHA+e3Nob3cuc3VtbWFyeS5yZXBsYWNlKC88Wy9dP1twYl0+L2csICcnKX08L3A+XHJcbiAgICAgIDxpbWcgc3JjPXtzaG93LmltYWdlLm1lZGl1bX0gYWx0PXtzaG93Lm5hbWV9IC8+XHJcbiAgICAgIDxociAvPlxyXG5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9J21hcmtkb3duJz5cclxuICAgICAgICA8aDM+e3JvdXRlci5xdWVyeS5pZH08L2gzPlxyXG4gICAgICAgIDxNYXJrZG93blxyXG4gICAgICAgICAgc291cmNlPXtgXHJcbiMjIFRoaXMgaXMgb3VyIEJsb2cgcG9zdC5cclxuWWVzLiB3ZSBjYW4gaGF2ZSBhIFtsaW5rXSgvKS5cclxuYW5kIHdlIGNhbiBoYXZlIGEgdGl0dGxlIGFzIHdlbGwuXHJcblxyXG4jIyMgVGhpcyBpcyBhIHRpdGxlXHJcbiAgICAgICAgYH1cclxuICAgICAgICAvPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcclxuICAgICAgICAubWFya2Rvd24ge1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5tYXJrZG93biBhIHtcclxuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgIGNvbG9yOiBibHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAubWFya2Rvd24gYTpob3ZlciB7XHJcbiAgICAgICAgICBvcGFjaXR5OiAwLjY7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5tYXJrZG93biBoMyB7XHJcbiAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICB9XHJcbiAgICAgIGB9PC9zdHlsZT5cclxuICAgIDwvTGF5b3V0PlxyXG4gIClcclxufVxyXG5cclxuUG9zdC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbihjb250ZXh0KSB7XHJcbiAgY29uc3QgeyBpZCB9ID0gY29udGV4dC5xdWVyeVxyXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Nob3dzLyR7aWR9YClcclxuICBjb25zdCBzaG93ID0gYXdhaXQgcmVzLmpzb24oKVxyXG4gIGNvbnNvbGUubG9nKGBGZXRjaGVkIHNob3c6ICR7c2hvdy5uYW1lfWApXHJcblxyXG4gIHJldHVybiB7IHNob3cgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb3N0XHJcbiJdfQ== */\\n/*@ sourceURL=C:\\\\Users\\\\samle\\\\Desktop\\\\more_projects\\\\hello-next\\\\pages\\\\p\\\\[id].js */\"));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n  console.log(`Fetched show: ${show.name}`);\n  return {\n    show\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/samle/Desktop/more_projects/hello-next/pages/p/[id].js"],"names":["fetch","Layout","useRouter","Markdown","Post","show","router","name","summary","replace","image","medium","query","id","getInitialProps","context","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,IAAI,CAACE,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAI,CAACG,OAAL,CAAaC,OAAb,CAAqB,aAArB,EAAoC,EAApC,CAAJ,CAFF,EAGE;AAAK,IAAA,GAAG,EAAEJ,IAAI,CAACK,KAAL,CAAWC,MAArB;AAA6B,IAAA,GAAG,EAAEN,IAAI,CAACE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,MAAM,CAACM,KAAP,CAAaC,EAAlB,CADF,EAEE,MAAC,QAAD;AACE,IAAA,MAAM,EAAG;;;;;;SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF;AAAA;AAAA;AAAA,0pFADF;AAsCD,CAxCD;;AA0CAT,IAAI,CAACU,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEF,IAAAA;AAAF,MAASE,OAAO,CAACH,KAAvB;AACA,QAAMI,GAAG,GAAG,MAAMhB,KAAK,CAAE,gCAA+Ba,EAAG,EAApC,CAAvB;AACA,QAAMR,IAAI,GAAG,MAAMW,GAAG,CAACC,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBd,IAAI,CAACE,IAAK,EAAvC;AAEA,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACD,CAPD;;AASA,eAAeD,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nimport Layout from '../../components/Layout'\r\nimport { useRouter } from 'next/router'\r\nimport Markdown from 'react-markdown'\r\n\r\nconst Post = ({ show }) => {\r\n  const router = useRouter()\r\n  return (\r\n    <Layout>\r\n      <h1>{show.name}</h1>\r\n      <p>{show.summary.replace(/<[/]?[pb]>/g, '')}</p>\r\n      <img src={show.image.medium} alt={show.name} />\r\n      <hr />\r\n\r\n      <div className='markdown'>\r\n        <h3>{router.query.id}</h3>\r\n        <Markdown\r\n          source={`\r\n## This is our Blog post.\r\nYes. we can have a [link](/).\r\nand we can have a tittle as well.\r\n\r\n### This is a title\r\n        `}\r\n        />\r\n      </div>\r\n      <style jsx global>{`\r\n        .markdown {\r\n          font-family: 'Arial';\r\n        }\r\n        .markdown a {\r\n          text-decoration: none;\r\n          color: blue;\r\n        }\r\n        .markdown a:hover {\r\n          opacity: 0.6;\r\n        }\r\n        .markdown h3 {\r\n          margin: 0;\r\n          padding: 0;\r\n          text-transform: uppercase;\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const { id } = context.query\r\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`)\r\n  const show = await res.json()\r\n  console.log(`Fetched show: ${show.name}`)\r\n\r\n  return { show }\r\n}\r\n\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}